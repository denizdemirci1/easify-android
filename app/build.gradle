apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: "org.jlleitschuh.gradle.ktlint"
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: 'kotlin-allopen'

allOpen {
  // allows mocking for classes w/o directly opening them for release builds
  annotation 'com.deniz.easify.util.OpenClass'
}

android {
  compileSdkVersion 29
  buildToolsVersion "29.0.3"

  defaultConfig {
    applicationId "com.easify.easify"
    minSdkVersion 21
    targetSdkVersion 29
    versionCode 1
    versionName "1.0"
    multiDexEnabled true

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  kotlinOptions {
    jvmTarget = JavaVersion.VERSION_1_8.toString()
  }
}

ktlint {
  version = "0.35.0"
  debug = true
  verbose = true
  android = true
  outputToConsole = true
  filter {
    exclude("**/generated/**")
    include("**/java/**")
  }
}

kapt {
  generateStubs = true
  correctErrorTypes true
}

dependencies {
  implementation fileTree(dir: "libs", include: ["*.jar"])
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"


  // AndroidX
  implementation "androidx.multidex:multidex:$multidex_version"
  implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
  implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
  implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
  implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
  implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
  implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"
  implementation "androidx.core:core-ktx:$core_ktx_version"
  implementation "androidx.appcompat:appcompat:$appCompat_version"
  implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"

  // Coroutine
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"

  // Dagger Hilt
  implementation "com.google.dagger:hilt-android:$dagger_hilt_version"
  kapt "com.google.dagger:hilt-android-compiler:$dagger_hilt_version"

  // Data Binding
  kapt "com.android.databinding:compiler:$data_binding_version"

  // Glide
  implementation "com.github.bumptech.glide:glide:$glide_version"
  annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"

  // Retrofit & OkHttp
  implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
  implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
  implementation "com.squareup.okhttp3:okhttp:$okHttp_version"
  implementation "com.squareup.okhttp3:logging-interceptor:$okHttp_version"


  // Unit Test
  testImplementation "junit:junit:$test_junit_version"


  // UI Test
  androidTestImplementation "androidx.test.ext:junit:$test_junit_ext_version"
  androidTestImplementation "androidx.test.espresso:espresso-core:$test_espresso_version"

}
